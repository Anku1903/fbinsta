{"version":3,"sources":["imgs/home.png","imgs/insta.png","imgs/youtube.png","serviceWorker.js","comps/Home.js","comps/Instagram.js","comps/Youtube.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","history","useHistory","className","src","home","alt","onClick","push","Instagram","useState","link","setlink","isres","setisres","url","seturl","ins","TextField","id","value","onChange","e","target","label","variant","alert","video_url","console","log","undefined","substring","request","error","response","html","$","cheerio","load","video_link","attr","height","width","controls","Youtube","show","setshow","you","getDownloadUrl","then","respo","hd","catch","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0663737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.ad207e6f.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.0dc760e8.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.cdbca3a7.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport home from '../imgs/home.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './style.css';\r\nfunction Home() {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n<div className=\"mainbox\">\r\n     <div className=\"imgbx\">\r\n         <img src={home} alt=\"picture\" />\r\n     </div>\r\n     <div className=\"btnbox\">\r\n         <button className=\"btns\" onClick={() => {history.push('/insta')}}><InstagramIcon /><span> Download Instagram Video</span></button>\r\n         \r\n         \r\n         <button className=\"btns\" onClick={() => {history.push('/youtube')}}><FacebookIcon /><span> Download Youtube Video</span></button>\r\n     </div>\r\n</div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React,{useState} from 'react';\r\nimport ins from '../imgs/insta.png';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport './style.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport cheerio from 'cheerio';\r\nimport request from 'request';\r\nfunction Instagram() {\r\n\r\n    const [link, setlink] = useState('');\r\n    const [isres, setisres] = useState(false);\r\n    const [url, seturl] = useState('');\r\n\r\n    const send = () => {\r\n        if(link === '') {\r\n            alert('Please Enter Valid URL')\r\n        }\r\n        else{\r\n\r\n            let video_url = link;\r\n    console.log(video_url);\r\n    if(video_url !== undefined){\r\n\r\n        if(video_url.substring(0,8) === 'https://' || video_url.substring(0,7) === 'http://' \r\n                || video_url.substring(0,21) === 'https://www.instagram' || video_url.substring(0,20) === 'http://www.instagram.com'){\r\n\r\n            request(video_url, (error, response, html) => {\r\n                if(!error){\r\n                    console.log('Insta_grab : '+video_url+' : Loaded');\r\n                    let $ = cheerio.load(html);\r\n\r\n                    let video_link = $('meta[property=\"og:video\"]').attr('content');\r\n                    let file = $('meta[property=\"og:type\"]').attr('content');\r\n                    let url = $('meta[property=\"og:url\"]').attr('content');\r\n                    let title = $('meta[property=\"og:title\"]').attr('content');\r\n                    seturl(video_link);\r\n                setisres(true);\r\n                    \r\n                }else{\r\n                    alert('Error, Unable to load webpage')\r\n                }\r\n            });\r\n        }else{\r\n            alert('Invalid URL')\r\n        }\r\n\r\n    }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n<div className=\"mainbox\">\r\n     <div className=\"imgbx\">\r\n         <img src={ins} alt=\"picture\" />\r\n     </div>\r\n     <div className=\"btnbox\">\r\n     <TextField id=\"outlined-basic\" value={link} onChange={(e) => {setlink(e.target.value)}} label=\"Enter video URL\" variant=\"outlined\" />\r\n\r\n         <button className=\"btns\" onClick={send}>\r\n         <ArrowDownwardIcon /><span> Get Video</span></button>\r\n     </div>\r\n{isres && <video height=\"300px\" width=\"300px\" controls={isres} src={url} />}\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instagram;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport you from '../imgs/youtube.png';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport './style.css';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport getDownloadUrl from 'facebook-video-downloader';\r\nfunction Youtube() {\r\n    const [link, setlink] = useState('');\r\n    const [show, setshow] = useState(false);\r\n    const [url, seturl] = useState('');\r\n\r\n    const send = () => {\r\n        if (link === '') {\r\n            alert('Please Enter Valid URL')\r\n        }\r\n        else{\r\n\r\n            getDownloadUrl(link).then(respo => {\r\n                seturl(respo.hd.url);\r\n                setshow(true);\r\n                }).catch(() => {\r\n                    alert('Can not find video :(');\r\n                })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"mainbox\">\r\n                <div className=\"imgbx\">\r\n                    <img src={you} alt=\"picture\" />\r\n                </div>\r\n                <div className=\"btnbox\">\r\n                    <TextField id=\"outlined-basic\" value={link} onChange={(e) => { setlink(e.target.value) }} label=\"Enter video URL\" variant=\"outlined\" />\r\n\r\n                    <button className=\"btns\" onClick={send}>\r\n                        <ArrowDownwardIcon /><span> Get Video</span></button>\r\n                </div>\r\n                {show && <video height=\"300px\" width=\"300px\" controls={show} src={url} />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Youtube\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Home from './comps/Home';\nimport Instagram from './comps/Instagram';\nimport Youtube from './comps/Youtube';\nconst App = () => {\n\n  return(  \n    <>\n<BrowserRouter basename={process.env.PUBLIC_URL}>\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/insta\" component={Instagram} />\n    <Route exact path=\"/youtube\" component={Youtube} />\n  </Switch>\n</BrowserRouter>\n    </>\n       ); \n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}